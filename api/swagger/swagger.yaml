swagger: "2.0"
info:
  version: "0.0.1"
  title: Get Coffee Cafe
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /cafe:
    # binds a127 app logic to a route
    x-swagger-router-controller: cafe
    get:
      description: get a cafe list
      # used as the method name of the controller
      operationId: index
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetCafeListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new cafe to the list
      operationId: create
      parameters: 
         - name: cafe
           in: body
           required: true
           description: New cafe details to add
           schema:
               $ref:  "#/definitions/CafeBody"
      responses:
        "200":
          description: Successfully saved new cafe
          schema:
            $ref: "#/definitions/CafeBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    x-swagger-router-controller: user
    get:
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
      description: Get a single user profile
      operationId: getUser
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Register User
      operationId: register
      parameters:
        - name: user
          in: body
          required: true
          description: User's login information
          schema:
            $ref: "#/definitions/RegisterUserBody"
      responses:
        "200":
          description: Successfully registered User
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/login:
    x-swagger-router-controller: user
    post:
      description: Login User
      operationId: login
      parameters:
        - name: credential
          in: body
          required: true
          description: Login Input Credetials
          schema:
            $ref: "#/definitions/CredentialBody"
      responses:
        "200":
          description: Sucessfully logged in
          schema:
            $ref: "#/definitions/AuthenticatedUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"              
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetCafeListResponse:
    required:
      - cafes
    properties:
      response-info:
        $ref: "#/definitions/GeneralResponseInfo"
      cafes:
        type: array
        items:
          $ref: "#/definitions/Cafe" 
 
  Cafe:
       required:
          - name
          - description 
       properties:
        name:
          type: string
          description: Cafe name
        description: 
          type: string
          description: Brief description of the cafe
     
  CafeBody:
    required:
      - cafe
    properties:
      response-info:
        $ref: "#/definitions/GeneralResponseInfo"
      cafe:
        $ref:  "#/definitions/Cafe"
  ErrorResponse:
    required:
    - message
    properties:
      response-info:
        $ref: "#/definitions/GeneralResponseInfo" 
      message:
        type: string
  GeneralResponseInfo:
    required:
      - success
      - title
      - message
    properties:
      success:
        type: boolean
      title:
        type: string
      message:
        type: string
  GetUserResponse:
    required:
      - user
    properties:
      user:
        $ref: "#/definitions/UserResponse"
  UserResponse:
    properties:
      email:
        type: string
      password:
        type: string
      createdOn:
        type: string
        format: date-time
      response-info:
        $ref: "#/definitions/GeneralResponseInfo"
  AuthenticatedUserResponse:
    properties:
      token:
        type: string
      email:
        type: string
      createdOn:
        type: string
        format: date-time
      issuedAt:
        type: string
        format: date-time
      response-info:
        $ref: "#/definitions/GeneralResponseInfo"
  CredentialBody:
    properties:
      email:
        type: string
      password:
        type: string    
  RegisterUserBody:
    properties:
      user:
        $ref: "#/definitions/CredentialBody"
